@page "/Login"
@namespace LoginComponent
@using Assignment2_3.Authentication


@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <NotAuthorized>
        <div class="d-flex flex-row mb-2">
            <div class="d-flex flex-column mr-5">
                <div class="mb-2">
                    <label>User name:</label>
                </div>
                <div>
                    <label>Password:</label>
                </div>
            </div>
            <div class="d-flex flex-column">
                <div class="mb-2">
                    <input type="text" placeholder="user name" @bind-value="username"/>
                </div>
                <div>
                    <input type="password" placeholder="password" @bind-value="password"/>
                </div>
            </div>
        </div>
        
        <div class="d-flex flex-column">
            <div class="mb-2" style="color:red">@errorMessage</div>
                        
            <div>
                <button class="btn-outline-success" @onclick="PerformLogin">Login</button>
            </div>
        </div>
        
    </NotAuthorized>
    <Authorized>
        <button class="btn-danger" @onclick="PerformLogout">Log out</button>
    </Authorized>
</AuthorizeView>

@code {
    private string username;
    private string password;
    private string errorMessage;

    public async Task PerformLogin() {
        errorMessage = "";
        try {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
        } catch (Exception e) {
            errorMessage = e.Message;
        }
    }

    public async Task PerformLogout() {
        errorMessage = "";
        username = "";
        password = "";
        try {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        } catch (Exception e) { }
    }

}